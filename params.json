{"name":"Vanilla","tagline":"A MVC web framework for Lua powered by OpenResty","body":"## Vanilla / (香草[中文文档](README-zh.md))\r\n*Vanilla is An OpenResty Lua MVC Web Framework.*\r\n\r\n![Vanilla](http://upload.jianshu.io/collections/images/225552/w-vanilla.png?imageMogr/thumbnail/300x300)\r\n\r\n### *MailList*\r\n- vanilla-en <vanilla-en@googlegroups.com>\r\n- vanilla-devel <vanilla-devel@googlegroups.com>\r\n- vanilla中文邮件列表 <vanilla@googlegroups.com>\r\n\r\n### *Install*\r\n*There are two ways to install:*\r\n\r\n- Make (recommended way)\r\n- Luarocks\r\n\r\n#### *Tips of ```make install```:*\r\n*Vanilla support many configuration options, many of those option have default value.*\r\n\r\nYou can use default installation but if your enviroment values different from which vanilla default, please config it with yours.\r\nEspecially the ```--openresty-path``` option. you should make sure it's point to your turely OpenResty install path.\r\nYou can run command ```./configure --help``` to learn how to use those options. \r\n\r\nBelow is the installation of a simple example:\r\n\r\n~~~\r\n./configure --prefix=/usr/local/vanilla --openresty-path=/usr/local/openresty\r\n\r\nmake install\r\n~~~\r\n\r\n#### *Tips of ```luarocks install```:*\r\n*You can use luarocks to install vanilla, but three point should be clear:*\r\n\r\n1. Your luarocks should install with lua5.1.x because of the compatibility problems in ABIs between Lua and Luajit.\r\n2. parameter NGX_PATH will be disabled in the nginx.conf.\r\n3. make sure that command nginx is in your environment PATH.\r\n\r\n### Vanilla usage\r\n#### *Vanilla CMDs*\r\n*Vanilla provide two commands ```vanilla```, and ```vanilla-console```.*\r\n\r\n- ```vanilla``` is for application building, service start, stop and so on.\r\n- ```vanilla-console``` is an interactive command line， you can use it for debugging, testing, Lua learning...\r\n\r\nRun ```vanilla``` in command line, you can find command ```vanilla``` provide three options.\r\n\r\n```\r\nvanilla\r\nVanilla v0.1.0-rc3, A MVC web framework for Lua powered by OpenResty.\r\n\r\nUsage: vanilla COMMAND [ARGS] [OPTIONS]\r\n\r\nThe available vanilla commands are:\r\n new [name]             Create a new Vanilla application\r\n start                  Starts the Vanilla server\r\n stop                   Stops the Vanilla server\r\n\r\nOptions:\r\n --trace                Shows additional logs\r\n```\r\n\r\n#### *Building up an application skeleton*\r\n```\r\nvanilla new app_name\r\ncd app_name\r\nvanilla start [--trace]     -- default running in development environment.\r\n-- under bash on linux\r\nVA_ENV=production vanilla start [--trace]  -- add VA_ENV to set the running environment.\r\n-- under tcsh on BSD\r\nsetenv VA_ENV production ; vanilla start [--trace]  -- add VA_ENV to set the running environment.\r\n```\r\n#### *Directory Structure*\r\n```\r\n /Users/zj-git/app_name/ tree ./\r\n./\r\n├── application\r\n│   ├── bootstrap.lua --application boot\r\n│   ├── controllers\r\n│   │   ├── error.lua --application error handling, dealing with corresponding business under this path error\r\n│   │   └── index.lua --vanilla hello world\r\n│   ├── library       --local libs\r\n│   ├── models \r\n│   │   ├── dao       --data handles for DB, APIs\r\n│   │   │   └── table.lua\r\n│   │   └── service   --encapsulations of DAOs\r\n│   │       └── user.lua\r\n│   ├── nginx         --openresy http phases\r\n│   │   └── init.lua  --init_by_lua demo\r\n│   ├── plugins\r\n│   └── views         --one to one correspondence to controllers\r\n│       ├── error     --error handle view layout\r\n│       │   └── error.html\r\n│       └── index     --index controller views\r\n│           └── index.html\r\n├── config\r\n│   ├── application.lua --app basic configuration such as router,initialization settings...\r\n│   ├── errors.lua    --app error conf\r\n│   ├── nginx.conf    --nginx.conf skeleton\r\n│   ├── nginx.lua     --nginx settings like lua_code_cache.\r\n│   ├── waf-regs      --WAF rules\r\n│   │   ├── args\r\n│   │   ├── cookie\r\n│   │   ├── post\r\n│   │   ├── url\r\n│   │   ├── user-agent\r\n│   │   └── whiteurl\r\n│   └── waf.lua       --app WAF config\r\n├── logs\r\n│   └── hack          --attack logs, keep path can be write\r\n├── pub               --app content_by_lua_file path\r\n    └── index.lua     --entrance file\r\n```\r\n#### *IndexController Demo*\r\n```\r\nlocal IndexController = {}\r\n\r\nfunction IndexController:index()\r\n    local view = self:getView()\r\n    local p = {}\r\n    p['vanilla'] = 'Welcome To Vanilla...'\r\n    p['zhoujing'] = 'Power by Openresty'\r\n    view:assign(p)\r\n    return view:display()\r\nend\r\n\r\nreturn IndexController\r\n```\r\n##### *Template demo (views/index/index.html)*\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n  <img src=\"http://m1.sinaimg.cn/maxwidth.300/m1.sinaimg.cn/120d7329960e19cf073f264751e8d959_2043_2241.png\">\r\n  <h1><a href = 'https://github.com/idevz/vanilla'>{{vanilla}}</a></h1><h5>{{zhoujing}}</h5>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Why Vanilla\r\n*To answer this question, we just need to see what did Openresty and Vanilla have done.*\r\n#### *Openresty*\r\n- Provides processing HTTP requests a full set of the overall solution\r\n- Opened up a new way for Nginx module development, we can use Lua to deal with Web requests\r\n- Formed an increasingly perfect ecology, the ecological covers all aspects of high-performance Web services \r\n\r\n#### *Vanilla*\r\n- Implement a Web development routine debugging, error handling, exception handling\r\n- Implement complete processing of the request and plug-in mechanism, support routing protocol, the template engine configuration\r\n- Integration, encapsulates a series of Web development commonly used tool set, class library (cookies, application firewall, etc.)\r\n- Features easy to use and extend\r\n- Support  different environment (development, test, online)\r\n- Focus on the business development, not any about nginx nor OpenResty\r\n- Based on OpenResty, have all the good qualities of OpenResty\r\n- Automated, Nginx instruction set of configuration management\r\n- More reasonable use Openresty encapsulation of request processing Phase\r\n\r\n### Community\r\n#### *QQ Groups&&WeChat public no.*\r\n- *Openresty/Vanilla Dev:205773855 (Vanilla panel discussion related topics)*\r\n- *Openresty:34782325(Discuss OpenResty and all kinds of advanced technology)*\r\n- *WeChat public no. of Vanilla Dev:Vanilla-OpenResty(Vanilla related information, document push)*\r\n\r\n\r\n[![QQ](http://pub.idqqimg.com/wpa/images/group.png)](http://shang.qq.com/wpa/qunwpa?idkey=673157ee0f0207ce2fb305d15999225c5aa967e88913dfd651a8cf59e18fd459)","google":"UA-28150381-2","note":"Don't delete this file! It's used internally to help with page regeneration."}